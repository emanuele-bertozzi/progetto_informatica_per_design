---
import Airtable from 'airtable';
import './style.css';

// Configura Airtable
const base = new Airtable({
  apiKey: import.meta.env.PUBLIC_AIRTABLE_API_KEY
}).base(import.meta.env.PUBLIC_AIRTABLE_BASE_ID);

// Recupera i dati
let items = [];
try {
  const records = await base(import.meta.env.PUBLIC_AIRTABLE_TABLE_NAME)
    .select({ maxRecords: 100 })
    .all();
 
  items = records.map(record => ({
    id: record.id,
    title: record.fields.titolo,
    description: record.fields.descrizione,
    image: record.fields.Image?.[0]?.url,
    category: record.fields.categoria,
	autore: record.fields.autore,
	anno: record.fields.anno,
  }));
} catch (error) {
  console.error('Errore caricamento dati:', error);
}

const titolo = "Il mio archivio";
---


<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro</title>
	</head>
	<body>
		<h1>{titolo}</h1>
    <p>Elementi trovati: {items.length}</p>
   
    <div class="grid">
      {items.map(item => (
        <div class="card">
          {item.image && <img src={item.image} alt={item.title} />}
          <h3>{item.title}</h3>
          <p>{item.description}</p>
		  <p>{item.autore}</p>
		  <p>{item.anno}</p>
          {item.category && <span class="category">{item.category}</span>}
        </div>
      ))}
    </div>

<!-- Form contributo -->
<details class="contribute-section">
  <summary>Vuoi contribuire all'archivio?</summary>
 
  <form id="contribute-form" class="contribute-form">
    <div class="form-group">
      <label for="title">Titolo *</label>
      <input type="text" id="title" name="title" required>
    </div>
   
    <div class="form-group">
      <label for="description">Descrizione *</label>
      <textarea id="description" name="description" rows="4" required></textarea>
    </div>
   
    <div class="form-group">
      <label for="category">Categoria</label>
      <select id="category" name="category">
        <option value="">Seleziona...</option>
        <option value="Neri">Neri</option>
        <option value="Siamesi">Siamesi</option>
        <option value="Europei">Europei</option>
        <option value="Altro">Altro</option>
      </select>
    </div>
   
    <div class="form-group">
      <label for="image-url">URL Immagine</label>
  <input
    type="url"
    id="image-url"
    name="imageUrl"
    placeholder="https://esempio.com/immagine.jpg"
  >
  <small>Inserisci il link di un'immagine già online (es: da Unsplash, Imgur, etc.)</small>
    </div>
   
    <button type="submit" class="submit-btn">Invia contributo</button>
    <div id="form-message" class="form-message"></div>
  </form>
</details>


    <script>
      // FORM CONTRIBUTO
document.getElementById('contribute-form')?.addEventListener('submit', async (e) => {
  e.preventDefault();
 
  const submitBtn = e.target.querySelector('.submit-btn');
  const messageDiv = document.getElementById('form-message');
 
  submitBtn.disabled = true;
  submitBtn.textContent = 'Invio in corso...';
  messageDiv.style.display = 'none';
 
  // Raccogli dati dal form
  const imageUrl = document.getElementById('image-url').value.trim();
 
  const formData = {
    Title: document.getElementById('title').value,
    Description: document.getElementById('description').value,
    Category: document.getElementById('category').value,
  };
 
  // IMPORTANTE: Aggiungi Image solo se c'è un URL valido
  if (imageUrl) {
    formData.Image = [
      {
        url: imageUrl
      }
    ];
  }
 
  console.log('Dati da inviare:', formData);
 
  try {
    const response = await fetch(`https://api.airtable.com/v0/${import.meta.env.PUBLIC_AIRTABLE_BASE_ID}/${import.meta.env.PUBLIC_AIRTABLE_TABLE_NAME}`, {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${import.meta.env.PUBLIC_AIRTABLE_API_KEY}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        fields: formData
      })
    });
   
    const responseData = await response.json();
    console.log('Risposta Airtable:', responseData);
   
    if (response.ok) {
      messageDiv.textContent = '✅ Contributo inviato con successo! Ricarica la pagina per vederlo.';
      messageDiv.className = 'form-message success';
      e.target.reset();
    } else {
      console.error('Errore Airtable:', responseData);
      messageDiv.textContent = `❌ Errore: ${responseData.error?.message || 'Errore sconosciuto'}`;
      messageDiv.className = 'form-message error';
    }
  } catch (error) {
    console.error('Errore generale:', error);
    messageDiv.textContent = '❌ Errore durante l\'invio. Riprova.';
    messageDiv.className = 'form-message error';
  } finally {
    submitBtn.disabled = false;
    submitBtn.textContent = 'Invia contributo';
  }
});
    </script>
	</body>
</html>
